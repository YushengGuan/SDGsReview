from ReadPDF import read_pdf
from Siliconflow import siliconflow
import time
import pandas as pd

system_prompt = f"你是一个科学文献总结助手，请你根据用户提供的文章内容，按照顺序回答以下问题，注意严格按照要求格式进行回答，不需要解释理由：\n" \
         f"1. 文章涉及17个可持续发展（SDGs）目标中的哪些？列出数字即可。\n" \
         f"2. 文章分析了可持续发展（SDGs）目标中的几级指标？如SDG17.1.1是三级指标，SDG1.2是二级指标，SDG3是一级指标。\n" \
         f"3. 文章采用了什么量化指标来衡量17个SDGs的目标？请将SDGs目标与文章提出的指标一一对应，如回答“SDG1-指标1、指标2；SDG5-指标3”。\n" \
         f"4. 文章评估了什么对什么的影响？请用“-”连接二者。\n" \
         f"5. 文章涉及到哪些行业？你可以选择20个国民经济行业门类中的一个或者几个回答。\n" \
         f"6. 文章是否涉及经济问题？如果没有，请回答“否”；如果有，请回答是否涉及消费者、企业、政府、机构等主体的经济问题。\n" \
         f"7. 文章是否涉及能源问题？如果没有，请回答“否”；如果有，请回答是否涉及煤、石油、天然气、光伏、风电、生物质、水电、核电、氢能等。" \
         f"8. 文章是否涉及环境问题？如果没有，请回答“否”；如果有，请回答是否属于大气污染、水污染、土壤污染、固体废物管理、应对气候变化、海洋污染等。\n" \
         f"9. 文章是否涉及环境污染物？如果没有，请回答“否”；如果有，请列出所有的污染物，用“；”相隔。\n" \
         f"10. 文章是否涉及人口问题？如果没有，请回答“否”；如果有，请说出文章按哪些属性划分了人群，如受教育程度、性别、地区、人种、技能熟练度等。" \
         f"11. 文章是否对技术的可持续性开展研究？如果没有，请回答“否”；如果有，请说出文章研究的对象是什么技术。\n" \
         f"12. 文章是否对政策的可持续性开展研究？如果没有，请回答“否”；如果有，请说出文章研究的对象是什么类型的政策，如经济政策、社会管理政策、环境政策、技术推广政策等。\n" \
         f"13. 文章是否对突发事件的可持续型开展研究？如果没有，请回答“否”；如果有，请说出文章研究的对象是什么事件，如COVID19、极端气候事件、污染事件、公共管理事件等等。\n" \
         f"14. 文章采用了什么样的研究方法？请判断是否属于问卷调研与统计、回归分析、结构方程模型、综合评估模型、宏观经济模型、污染物排放核算模型、投入产出模型、可计算一般均衡模型、博弈模型、地球系统模型、环境物理化学模型、行为决策模型、成本优化模型、系统动力学模型等。如果属于，则回答这些词汇中的一个或几个；如果不属于，则用一个能准确概括该文章方法的词汇回答。\n" \
         f"15. 文章研究的地理范围是哪些区域？你可以回答“全球”、一个或者几个国家和区域的名字。\n" \
         f"16. 在空间精细度上，研究的精细度达到了什么级别？你可以回答全球、区域、国家、省级、城市级、行业级或者空间网格级。\n" \
         f"17. 在时间范围上，文章研究的时间范围是多少年到多少年？例如回答“2015-2030”。\n" \
         f"18. 在时间精细度上，文章研究的时间精细度达到了什么级别？你可以回答年、季度、月、周、日、小时级等。\n" \
         f"19. 文章属于哪个学科的研究？请回答一个名词。可选词汇有：社会科学、环境科学、能源、管理、工程、经济学、计算科学、医药、地球和星球科学、农业和生物学、跨学科、艺术和人类、决策科学、数学、物理、分子生物、化学工程等。\n" \
         f"20. 这篇文章的作者都属于哪个国家？请根据文本信息按作者顺序列出几个国家，每个国家之间用逗号隔开，如有重复，重复列出即可，不需要其他字符。\n" 


if __name__ == '__main__':
    file_path = r'paper_for_test.pdf'

    try:
        start = time.time()

        pmt = f"文章原文如下：{read_pdf(file_path)}"
        response = siliconflow(pmt, system=system_prompt)
        print('Deepseek:', response)

        end = time.time()
        print('用时:', round(end - start, 2), 's')

        # time.sleep(60)  # make sure not exceed the TPM rate limit
        # print(f'已等待{60}s')

    except Exception as e:
        print('发生了一个错误：', e)
        response = [-1, 'An error occurred.']
